// <auto-generated> This file has been auto generated by EF Core Power Tools. </auto-generated>
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Metadata;
using Viajes.Entities.Entities;

#nullable disable

namespace Viajes.DataAccess.Context
{
    public partial class ViajesContext : DbContext
    {
        public ViajesContext()
        {
        }

        public ViajesContext(DbContextOptions<ViajesContext> options)
            : base(options)
        {
        }

        public virtual DbSet<VW_tbColaboradores> VW_tbColaboradores { get; set; }
        public virtual DbSet<VW_tbDepartamentos> VW_tbDepartamentos { get; set; }
        public virtual DbSet<VW_tbEstadosCiviles> VW_tbEstadosCiviles { get; set; }
        public virtual DbSet<VW_tbMunicipios> VW_tbMunicipios { get; set; }
        public virtual DbSet<VW_tbPantallas> VW_tbPantallas { get; set; }
        public virtual DbSet<VW_tbPantallasPorRoles> VW_tbPantallasPorRoles { get; set; }
        public virtual DbSet<VW_tbRoles> VW_tbRoles { get; set; }
        public virtual DbSet<VW_tbSucursales> VW_tbSucursales { get; set; }
        public virtual DbSet<VW_tbTransportistas> VW_tbTransportistas { get; set; }
        public virtual DbSet<VW_tbUsuarios> VW_tbUsuarios { get; set; }
        public virtual DbSet<VW_tbViajes> VW_tbViajes { get; set; }
        public virtual DbSet<VW_tbViajesDetalles> VW_tbViajesDetalles { get; set; }
        public virtual DbSet<tbColaboradores> tbColaboradores { get; set; }
        public virtual DbSet<tbDepartamentos> tbDepartamentos { get; set; }
        public virtual DbSet<tbEstadosCiviles> tbEstadosCiviles { get; set; }
        public virtual DbSet<tbMunicipios> tbMunicipios { get; set; }
        public virtual DbSet<tbPantallas> tbPantallas { get; set; }
        public virtual DbSet<tbPantallasPorRoles> tbPantallasPorRoles { get; set; }
        public virtual DbSet<tbRoles> tbRoles { get; set; }
        public virtual DbSet<tbSucursales> tbSucursales { get; set; }
        public virtual DbSet<tbTransportistas> tbTransportistas { get; set; }
        public virtual DbSet<tbUsuarios> tbUsuarios { get; set; }
        public virtual DbSet<tbViajes> tbViajes { get; set; }
        public virtual DbSet<tbViajesDetalles> tbViajesDetalles { get; set; }

        protected override void OnModelCreating(ModelBuilder modelBuilder)
        {
            modelBuilder.HasAnnotation("Relational:Collation", "SQL_Latin1_General_CP1_CI_AS");

            modelBuilder.Entity<VW_tbColaboradores>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbColaboradores", "viaj");

                entity.Property(e => e.cola_Apellidos)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.cola_DireccionExacta)
                    .IsRequired()
                    .HasMaxLength(250);

                entity.Property(e => e.cola_DistanciaSucursal).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.cola_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.cola_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.cola_FechaNacimiento).HasColumnType("date");

                entity.Property(e => e.cola_Identidad)
                    .IsRequired()
                    .HasMaxLength(15);

                entity.Property(e => e.cola_NombreCompleto)
                    .IsRequired()
                    .HasMaxLength(401);

                entity.Property(e => e.cola_Nombres)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.cola_Sexo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.cola_Telefono)
                    .IsRequired()
                    .HasMaxLength(20);

                entity.Property(e => e.depa_Id)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.depa_Nombre)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.eciv_Descripcion)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.muni_Id)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.muni_Nombre)
                    .IsRequired()
                    .HasMaxLength(80);

                entity.Property(e => e.sucu_Nombre)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.user_Creacion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.user_Modificacion).HasMaxLength(100);
            });

            modelBuilder.Entity<VW_tbDepartamentos>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbDepartamentos", "gral");

                entity.Property(e => e.depa_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.depa_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.depa_Id)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.depa_Nombre)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.user_Creacion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.user_Modificacion).HasMaxLength(100);
            });

            modelBuilder.Entity<VW_tbEstadosCiviles>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbEstadosCiviles", "gral");

                entity.Property(e => e.eciv_Descripcion)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.eciv_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.eciv_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.user_Creacion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.user_Modificacion).HasMaxLength(100);
            });

            modelBuilder.Entity<VW_tbMunicipios>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbMunicipios", "gral");

                entity.Property(e => e.depa_Id)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.muni_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.muni_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.muni_Id)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.muni_Nombre)
                    .IsRequired()
                    .HasMaxLength(80);

                entity.Property(e => e.muni_UsuCreacion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.user_Creacion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.user_Modificacion).HasMaxLength(100);
            });

            modelBuilder.Entity<VW_tbPantallas>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbPantallas", "acce");

                entity.Property(e => e.pant_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.pant_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.pant_Icono)
                    .IsRequired()
                    .HasMaxLength(300);

                entity.Property(e => e.pant_Id).ValueGeneratedOnAdd();

                entity.Property(e => e.pant_Menu)
                    .IsRequired()
                    .HasMaxLength(300);

                entity.Property(e => e.pant_Nombre)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.pant_Url)
                    .IsRequired()
                    .HasMaxLength(300);

                entity.Property(e => e.pant_reactId)
                    .IsRequired()
                    .HasMaxLength(80);
            });

            modelBuilder.Entity<VW_tbPantallasPorRoles>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbPantallasPorRoles", "acce");

                entity.Property(e => e.pant_Nombre)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.prol_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.prol_FechaModificacion).HasColumnType("datetime");
            });

            modelBuilder.Entity<VW_tbRoles>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbRoles", "acce");

                entity.Property(e => e.role_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.role_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.role_Nombre)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.user_Creacion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.user_Modificacion).HasMaxLength(100);
            });

            modelBuilder.Entity<VW_tbSucursales>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbSucursales", "viaj");

                entity.Property(e => e.depa_Id)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.depa_Nombre)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.muni_Id)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.muni_Nombre)
                    .IsRequired()
                    .HasMaxLength(80);

                entity.Property(e => e.sucu_Direccion)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.sucu_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.sucu_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.sucu_Nombre)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.user_Creacion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.user_Modificacion).HasMaxLength(100);
            });

            modelBuilder.Entity<VW_tbTransportistas>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbTransportistas", "viaj");

                entity.Property(e => e.depa_Id)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.depa_Nombre)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.eciv_Descripcion)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.muni_Id)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.muni_Nombre)
                    .IsRequired()
                    .HasMaxLength(80);

                entity.Property(e => e.tran_Apellidos)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.tran_DireccionExacta)
                    .IsRequired()
                    .HasMaxLength(250);

                entity.Property(e => e.tran_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.tran_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.tran_FechaNacimiento).HasColumnType("date");

                entity.Property(e => e.tran_Identidad)
                    .IsRequired()
                    .HasMaxLength(15);

                entity.Property(e => e.tran_NombreCompleto)
                    .IsRequired()
                    .HasMaxLength(401);

                entity.Property(e => e.tran_Nombres)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.tran_PagoKm).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.tran_Sexo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.tran_Telefono)
                    .IsRequired()
                    .HasMaxLength(20);

                entity.Property(e => e.user_Creacion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.user_Modificacion).HasMaxLength(100);
            });

            modelBuilder.Entity<VW_tbUsuarios>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbUsuarios", "acce");

                entity.Property(e => e.role_Nombre).HasMaxLength(100);

                entity.Property(e => e.user_Contrasena).IsRequired();

                entity.Property(e => e.user_Creacion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.user_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.user_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.user_Modificacion).HasMaxLength(100);

                entity.Property(e => e.user_NombreUsuario)
                    .IsRequired()
                    .HasMaxLength(100);
            });

            modelBuilder.Entity<VW_tbViajes>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbViajes", "viaj");

                entity.Property(e => e.tran_NombreCompleto)
                    .IsRequired()
                    .HasMaxLength(401);

                entity.Property(e => e.user_Creacion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.user_Modificacion).HasMaxLength(100);

                entity.Property(e => e.viaj_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.viaj_FechaModificacion).HasColumnType("datetime");
            });

            modelBuilder.Entity<VW_tbViajesDetalles>(entity =>
            {
                entity.HasNoKey();

                entity.ToView("VW_tbViajesDetalles", "viaj");

                entity.Property(e => e.cola_NombreCompleto)
                    .IsRequired()
                    .HasMaxLength(401);

                entity.Property(e => e.user_Creacion)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.user_Modificacion).HasMaxLength(100);

                entity.Property(e => e.vide_FechaCreacion).HasColumnType("datetime");

                entity.Property(e => e.vide_FechaModificacion).HasColumnType("datetime");
            });

            modelBuilder.Entity<tbColaboradores>(entity =>
            {
                entity.HasKey(e => e.cola_Id)
                    .HasName("PK_viaj_tbColaboradores_cola_Id");

                entity.ToTable("tbColaboradores", "viaj");

                entity.Property(e => e.cola_Apellidos)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.cola_DireccionExacta)
                    .IsRequired()
                    .HasMaxLength(250);

                entity.Property(e => e.cola_DistanciaSucursal).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.cola_Estado)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.cola_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.cola_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.cola_FechaNacimiento).HasColumnType("date");

                entity.Property(e => e.cola_Identidad)
                    .IsRequired()
                    .HasMaxLength(15);

                entity.Property(e => e.cola_Nombres)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.cola_Sexo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.cola_Telefono)
                    .IsRequired()
                    .HasMaxLength(20);

                entity.Property(e => e.muni_Id)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.HasOne(d => d.cola_UsuCreacionNavigation)
                    .WithMany(p => p.tbColaboradorescola_UsuCreacionNavigation)
                    .HasForeignKey(d => d.cola_UsuCreacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_viaj_tbColaboradores_acce_tbUsuarios_UserCreate");

                entity.HasOne(d => d.cola_UsuModificacionNavigation)
                    .WithMany(p => p.tbColaboradorescola_UsuModificacionNavigation)
                    .HasForeignKey(d => d.cola_UsuModificacion)
                    .HasConstraintName("FK_viaj_tbColaboradores_acce_tbUsuarios_UserUpdate");

                entity.HasOne(d => d.eciv)
                    .WithMany(p => p.tbColaboradores)
                    .HasForeignKey(d => d.eciv_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_viaj_tbColaboradores_gral_tbEstadosCiviles_eciv_Id");

                entity.HasOne(d => d.muni)
                    .WithMany(p => p.tbColaboradores)
                    .HasForeignKey(d => d.muni_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_viaj_tbColaboradores_gral_tbMunicipios_muni_Id");

                entity.HasOne(d => d.sucu)
                    .WithMany(p => p.tbColaboradores)
                    .HasForeignKey(d => d.sucu_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_viaj_tbColaboradores_viaj_tbSucursales_sucu_Id");
            });

            modelBuilder.Entity<tbDepartamentos>(entity =>
            {
                entity.HasKey(e => e.depa_Id)
                    .HasName("PK_gral_tbDepartamentos_depa_Id");

                entity.ToTable("tbDepartamentos", "gral");

                entity.Property(e => e.depa_Id)
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.depa_Estado)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.depa_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.depa_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.depa_Nombre)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.HasOne(d => d.depa_UsuCreacionNavigation)
                    .WithMany(p => p.tbDepartamentosdepa_UsuCreacionNavigation)
                    .HasForeignKey(d => d.depa_UsuCreacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_gral_tbDepartamentos_acce_tbUsuarios_depa_UsuCreacion_user_Id");

                entity.HasOne(d => d.depa_UsuModificacionNavigation)
                    .WithMany(p => p.tbDepartamentosdepa_UsuModificacionNavigation)
                    .HasForeignKey(d => d.depa_UsuModificacion)
                    .HasConstraintName("FK_gral_tbDepartamentos_acce_tbUsuarios_depa_UsuModificacion_user_Id");
            });

            modelBuilder.Entity<tbEstadosCiviles>(entity =>
            {
                entity.HasKey(e => e.eciv_Id)
                    .HasName("PK_gral_tbEstadosCiviles_ectv_Id");

                entity.ToTable("tbEstadosCiviles", "gral");

                entity.Property(e => e.eciv_Descripcion)
                    .HasMaxLength(100)
                    .IsUnicode(false);

                entity.Property(e => e.eciv_Estado)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.eciv_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.eciv_FechaModificacion).HasColumnType("datetime");

                entity.HasOne(d => d.eciv_UsuCreacionNavigation)
                    .WithMany(p => p.tbEstadosCivileseciv_UsuCreacionNavigation)
                    .HasForeignKey(d => d.eciv_UsuCreacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_gral_tbEstadosCiviles_UsuCreacion_usua_Id");

                entity.HasOne(d => d.eciv_UsuModificacionNavigation)
                    .WithMany(p => p.tbEstadosCivileseciv_UsuModificacionNavigation)
                    .HasForeignKey(d => d.eciv_UsuModificacion)
                    .HasConstraintName("FK_gral_tbEstadosCiviles_UsuModificacion_usua_Id");
            });

            modelBuilder.Entity<tbMunicipios>(entity =>
            {
                entity.HasKey(e => e.muni_Id)
                    .HasName("PK_gral_tbMunicipios_muni_Id");

                entity.ToTable("tbMunicipios", "gral");

                entity.Property(e => e.muni_Id)
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.depa_Id)
                    .IsRequired()
                    .HasMaxLength(2)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.muni_Estado)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.muni_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.muni_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.muni_Nombre)
                    .IsRequired()
                    .HasMaxLength(80);

                entity.HasOne(d => d.depa)
                    .WithMany(p => p.tbMunicipios)
                    .HasForeignKey(d => d.depa_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_gral_tbMunicipios_gral_tbDepartamentos_depa_Id");

                entity.HasOne(d => d.muni_UsuCreacionNavigation)
                    .WithMany(p => p.tbMunicipiosmuni_UsuCreacionNavigation)
                    .HasForeignKey(d => d.muni_UsuCreacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_gral_tbMunicipios_acce_tbUsuarios_muni_UsuCreacion_user_Id");

                entity.HasOne(d => d.muni_UsuModificacionNavigation)
                    .WithMany(p => p.tbMunicipiosmuni_UsuModificacionNavigation)
                    .HasForeignKey(d => d.muni_UsuModificacion)
                    .HasConstraintName("FK_gral_tbMunicipios_acce_tbUsuarios_muni_UsuModificacion_user_Id");
            });

            modelBuilder.Entity<tbPantallas>(entity =>
            {
                entity.HasKey(e => e.pant_Id)
                    .HasName("PK_acce_tbPantallas_pant_Id");

                entity.ToTable("tbPantallas", "acce");

                entity.Property(e => e.pant_Estado)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.pant_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.pant_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.pant_Icono)
                    .IsRequired()
                    .HasMaxLength(300);

                entity.Property(e => e.pant_Menu)
                    .IsRequired()
                    .HasMaxLength(300);

                entity.Property(e => e.pant_Nombre)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.Property(e => e.pant_Url)
                    .IsRequired()
                    .HasMaxLength(300);

                entity.Property(e => e.pant_reactId)
                    .IsRequired()
                    .HasMaxLength(80);
            });

            modelBuilder.Entity<tbPantallasPorRoles>(entity =>
            {
                entity.HasKey(e => e.prol_Id)
                    .HasName("PK_acce_tbPantallasPorRoles_pantrole_Id");

                entity.ToTable("tbPantallasPorRoles", "acce");

                entity.Property(e => e.prol_Estado)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.prol_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.prol_FechaModificacion).HasColumnType("datetime");

                entity.HasOne(d => d.pant)
                    .WithMany(p => p.tbPantallasPorRoles)
                    .HasForeignKey(d => d.pant_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_acce_tbPantallasPorRoles_acce_tbPantallas_pant_Id");

                entity.HasOne(d => d.prol_UsuCreacionNavigation)
                    .WithMany(p => p.tbPantallasPorRolesprol_UsuCreacionNavigation)
                    .HasForeignKey(d => d.prol_UsuCreacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_acce_tbPantallasPorRoles_acce_tbUsuarios_pantrole_UsuCreacion_user_Id");

                entity.HasOne(d => d.prol_UsuModificacionNavigation)
                    .WithMany(p => p.tbPantallasPorRolesprol_UsuModificacionNavigation)
                    .HasForeignKey(d => d.prol_UsuModificacion)
                    .HasConstraintName("FK_acce_tbPantallasPorRoles_acce_tbUsuarios_pantrole_UsuModificacion_user_Id");

                entity.HasOne(d => d.role)
                    .WithMany(p => p.tbPantallasPorRoles)
                    .HasForeignKey(d => d.role_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_acce_tbPantallasPorRoles_acce_tbRoles_role_Id");
            });

            modelBuilder.Entity<tbRoles>(entity =>
            {
                entity.HasKey(e => e.role_Id)
                    .HasName("PK_acce_tbRoles_role_Id");

                entity.ToTable("tbRoles", "acce");

                entity.HasIndex(e => e.role_Nombre, "UQ__tbRoles__3895D82E7310F0EE")
                    .IsUnique();

                entity.Property(e => e.role_Estado)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.role_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.role_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.role_Nombre)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.HasOne(d => d.role_UsuCreacionNavigation)
                    .WithMany(p => p.tbRolesrole_UsuCreacionNavigation)
                    .HasForeignKey(d => d.role_UsuCreacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_acce_tbRoles_acce_tbUsuarios_role_UsuCreacion_user_Id");

                entity.HasOne(d => d.role_UsuModificacionNavigation)
                    .WithMany(p => p.tbRolesrole_UsuModificacionNavigation)
                    .HasForeignKey(d => d.role_UsuModificacion)
                    .HasConstraintName("FK_acce_tbRoles_acce_tbUsuarios_role_UsuModificacion_user_Id");
            });

            modelBuilder.Entity<tbSucursales>(entity =>
            {
                entity.HasKey(e => e.sucu_Id)
                    .HasName("PK_viaj_tbSucursales_sucu_Id");

                entity.ToTable("tbSucursales", "viaj");

                entity.Property(e => e.muni_Id)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.sucu_Direccion)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.sucu_Estado).HasDefaultValueSql("((1))");

                entity.Property(e => e.sucu_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.sucu_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.sucu_Nombre)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.HasOne(d => d.muni)
                    .WithMany(p => p.tbSucursales)
                    .HasForeignKey(d => d.muni_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_viaj_tbSucursales_gral_tbMunicipios_muni_Id");

                entity.HasOne(d => d.sucu_UsuCreacionNavigation)
                    .WithMany(p => p.tbSucursalessucu_UsuCreacionNavigation)
                    .HasForeignKey(d => d.sucu_UsuCreacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_viaj_tbSucursales_acce_tbUsuarios_sucu_UsuCreacion");

                entity.HasOne(d => d.sucu_UsuModificacionNavigation)
                    .WithMany(p => p.tbSucursalessucu_UsuModificacionNavigation)
                    .HasForeignKey(d => d.sucu_UsuModificacion)
                    .HasConstraintName("FK_viaj_tbSucursales_acce_tbUsuarios_sucu_UsuModificacion");
            });

            modelBuilder.Entity<tbTransportistas>(entity =>
            {
                entity.HasKey(e => e.tran_Id)
                    .HasName("PK_viaj_tbTransportistas_tran_Id");

                entity.ToTable("tbTransportistas", "viaj");

                entity.Property(e => e.muni_Id)
                    .IsRequired()
                    .HasMaxLength(4)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.tran_Apellidos)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.tran_DireccionExacta)
                    .IsRequired()
                    .HasMaxLength(250);

                entity.Property(e => e.tran_Estado)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.tran_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.tran_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.tran_FechaNacimiento).HasColumnType("date");

                entity.Property(e => e.tran_Identidad)
                    .IsRequired()
                    .HasMaxLength(15);

                entity.Property(e => e.tran_Nombres)
                    .IsRequired()
                    .HasMaxLength(200);

                entity.Property(e => e.tran_PagoKm).HasColumnType("decimal(18, 2)");

                entity.Property(e => e.tran_Sexo)
                    .IsRequired()
                    .HasMaxLength(1)
                    .IsUnicode(false)
                    .IsFixedLength(true);

                entity.Property(e => e.tran_Telefono)
                    .IsRequired()
                    .HasMaxLength(20);

                entity.HasOne(d => d.eciv)
                    .WithMany(p => p.tbTransportistas)
                    .HasForeignKey(d => d.eciv_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_viaj_tbTransportistas_gral_tbEstadosCiviles_eciv_Id");

                entity.HasOne(d => d.muni)
                    .WithMany(p => p.tbTransportistas)
                    .HasForeignKey(d => d.muni_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_viaj_tbTransportistas_gral_tbMunicipios_muni_Id");

                entity.HasOne(d => d.tran_UsuCreacionNavigation)
                    .WithMany(p => p.tbTransportistastran_UsuCreacionNavigation)
                    .HasForeignKey(d => d.tran_UsuCreacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_viaj_tbTransportistas_acce_tbUsuarios_UserCreate");

                entity.HasOne(d => d.tran_UsuModificacionNavigation)
                    .WithMany(p => p.tbTransportistastran_UsuModificacionNavigation)
                    .HasForeignKey(d => d.tran_UsuModificacion)
                    .HasConstraintName("FK_viaj_tbTransportistas_acce_tbUsuarios_UserUpdate");
            });

            modelBuilder.Entity<tbUsuarios>(entity =>
            {
                entity.HasKey(e => e.user_Id)
                    .HasName("PK_acce_tbUsuarios_user_Id");

                entity.ToTable("tbUsuarios", "acce");

                entity.Property(e => e.user_Contrasena).IsRequired();

                entity.Property(e => e.user_Estado)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.user_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.user_FechaModificacion).HasColumnType("datetime");

                entity.Property(e => e.user_NombreUsuario)
                    .IsRequired()
                    .HasMaxLength(100);

                entity.HasOne(d => d.role)
                    .WithMany(p => p.tbUsuarios)
                    .HasForeignKey(d => d.role_Id)
                    .HasConstraintName("FK_acce_tbUsuarios_acce_tbRoles_role_Id");

                entity.HasOne(d => d.user_UsuCreacionNavigation)
                    .WithMany(p => p.Inverseuser_UsuCreacionNavigation)
                    .HasForeignKey(d => d.user_UsuCreacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_acce_tbUsuarios_acce_tbUsuarios_user_UsuCreacion_user_Id");

                entity.HasOne(d => d.user_UsuModificacionNavigation)
                    .WithMany(p => p.Inverseuser_UsuModificacionNavigation)
                    .HasForeignKey(d => d.user_UsuModificacion)
                    .HasConstraintName("FK_acce_tbUsuarios_acce_tbUsuarios_user_UsuModificacion_user_Id");
            });

            modelBuilder.Entity<tbViajes>(entity =>
            {
                entity.HasKey(e => e.viaj_Id)
                    .HasName("PK_viaj_tbViajes_viaj_Id");

                entity.ToTable("tbViajes", "viaj");

                entity.Property(e => e.viaj_Estado)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.viaj_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.viaj_FechaModificacion).HasColumnType("datetime");

                entity.HasOne(d => d.tran)
                    .WithMany(p => p.tbViajes)
                    .HasForeignKey(d => d.tran_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_viaj_tbViajes_viaj_tbTransportistas_tran_Id");

                entity.HasOne(d => d.viaj_UsuCreacionNavigation)
                    .WithMany(p => p.tbViajesviaj_UsuCreacionNavigation)
                    .HasForeignKey(d => d.viaj_UsuCreacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_viaj_tbViajes_acce_tbUsuarios_UserCreate");

                entity.HasOne(d => d.viaj_UsuModificacionNavigation)
                    .WithMany(p => p.tbViajesviaj_UsuModificacionNavigation)
                    .HasForeignKey(d => d.viaj_UsuModificacion)
                    .HasConstraintName("FK_viaj_tbViajes_acce_tbUsuarios_UserUpdate");
            });

            modelBuilder.Entity<tbViajesDetalles>(entity =>
            {
                entity.HasKey(e => e.vide_Id)
                    .HasName("PK_viaj_tbViajesDetalles_vide_Id");

                entity.ToTable("tbViajesDetalles", "viaj");

                entity.Property(e => e.vide_Estado)
                    .IsRequired()
                    .HasDefaultValueSql("((1))");

                entity.Property(e => e.vide_FechaCreacion)
                    .HasColumnType("datetime")
                    .HasDefaultValueSql("(getdate())");

                entity.Property(e => e.vide_FechaModificacion).HasColumnType("datetime");

                entity.HasOne(d => d.cola)
                    .WithMany(p => p.tbViajesDetalles)
                    .HasForeignKey(d => d.cola_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_viaj_tbViajesDetalles_viaj_tbColaboradores_cola_Id");

                entity.HasOne(d => d.viaj)
                    .WithMany(p => p.tbViajesDetalles)
                    .HasForeignKey(d => d.viaj_Id)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_viaj_tbViajesDetalles_viaj_tbViajes_viaj_Id");

                entity.HasOne(d => d.vide_UsuCreacionNavigation)
                    .WithMany(p => p.tbViajesDetallesvide_UsuCreacionNavigation)
                    .HasForeignKey(d => d.vide_UsuCreacion)
                    .OnDelete(DeleteBehavior.ClientSetNull)
                    .HasConstraintName("FK_viaj_tbViajesDetalles_acce_tbUsuarios_UserCreate");

                entity.HasOne(d => d.vide_UsuModificacionNavigation)
                    .WithMany(p => p.tbViajesDetallesvide_UsuModificacionNavigation)
                    .HasForeignKey(d => d.vide_UsuModificacion)
                    .HasConstraintName("FK_viaj_tbViajesDetalles_acce_tbUsuarios_UserUpdate");
            });

            OnModelCreatingPartial(modelBuilder);
        }

        partial void OnModelCreatingPartial(ModelBuilder modelBuilder);
    }
}